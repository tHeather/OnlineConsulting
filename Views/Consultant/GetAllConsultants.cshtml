@using OnlineConsulting.Models.ViewModels.Modals;
@using OnlineConsulting.Models.ViewModels.Pagination;
@model OnlineConsulting.Models.ViewModels.Consultant.GetAllConsultantsViewModel;

<div class="p-1 p-xl-5">
        <h1 class="text-light pb-3 pt-3 pt-xl-0">Consultant List</h1>
        <div class="table-responsive rounded mb-2">
            <table class="table ">
                <thead class="bg-light ">
                    <tr>
                        <th scope="col" class="text-dark">First name </th>
                        <th scope="col" class="text-dark">Surname</th>
                        <th scope="col" class="text-dark">E-mail</th>
                        <th></th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var consultant in Model.ConsultantList)
                    {
                    <tr class="bg-dark">
                        <td class="text-light">@consultant.FirstName</td>
                        <td class="text-light">@consultant.Surname</td>
                        <td class="text-light">@consultant.Email</td>
                        <td>
                            <a class="btn btn-info"
                               asp-controller="Statistic"
                               asp-action="GetStatisticsForConsultant"
                               asp-route-id=@consultant.Id>
                                Statistics
                            </a>
                        </td>
                        <td>
                            <form
                                method="post"
                                asp-controller="Consultant"
                                asp-action="ResetConsultantPassword"
                            >
                                <input hidden name="id" value="@consultant.Id" />
                                <button class="btn btn-secondary" >Reset password</button>
                            </form>
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#Modal-@consultant.Id">
                                Delete
                            </button>

                            @await Html.PartialAsync(
                           "/Views/Shared/Modals/_ConfirmationModal.cshtml",
                           new ConfirmationModalViewModel
                           {
                               Id = $"Modal-{consultant.Id}",
                               ModalLabel = "Delete Confirmation",
                               ModalText = $"Are you sure want to delete {consultant.Email} consultant?",
                               ConfirmController = "Consultant",
                               ConfirmAction = "DeleteConsultant",
                               ConfirmText = "Yes",
                               ConfirmParams = new Dictionary<string, string> { { "id", consultant.Id } },
                               RejectText = "No",
                               ConfirmHttpVerb ="POST"
                           })

                        </td>
                    </tr>
                    }
                </tbody>
            </table>
        </div>
        @await Html.PartialAsync(
    "/Views/Shared/Pagination/_Pagination.cshtml",
    new PaginationViewModel
    {
        PageIndex = Model.ConsultantList.PageIndex,
        TotalPages = Model.ConsultantList.TotalPages,
        HasPreviousPage = Model.ConsultantList.HasPreviousPage,
        HasNextPage = Model.ConsultantList.HasNextPage,
        SurroundingIndexes = Model.ConsultantList.GetSurroundingIndexes(2),
        Action = "GetAllConsultants"
    })
</div>

    @if (Model.Modal.ModalText != null)
    {@await Html.PartialAsync("/Views/Shared/Modals/_Modal.cshtml", Model.Modal);
}

