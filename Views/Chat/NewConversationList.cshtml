@using OnlineConsulting.Models.ViewModels.Pagination;
@model OnlineConsulting.Models.ViewModels.Chat.NewConversationListViewModel;

<h1 class="my-5">New conversations</h1>
@if (Model.ConversationList.Count > 0)
{
    @foreach (var conversation in Model.ConversationList)
    {
        <div class="card mb-5">
            <div class="card-header d-flex justify-content-sm-between">
                <div class="d-flex align-items-center">
                    <i class="fas fa-comment-alt fa-lg"></i>
                    <h5 class="card-title m-0 ml-2 d-flex align-items-center">@conversation.Host</h5>
                </div>
                <form asp-controller="chat" asp-action="consultant" method="post">
                    @{
                        var ConversationId = conversation.Id;
                        var RowVersion = conversation.RowVersion;
                    }
                    <input type="hidden" asp-for=@ConversationId />
                    <input type="hidden" asp-for=@RowVersion />
                    <input type="hidden" name="redirectAction" value="NewConversationList" />
                    <button class="btn btn-success">Join</button>
                </form>
            </div>
            <div class="card-body">
                <table class="table">
                    <tbody>
                        <tr>
                            <th>Create date</th>
                            <td data-utc-date="@conversation.CreateDate"></td>
                        </tr>
                        <tr>
                            <th>Origin</th>
                            <td>@conversation.Host@conversation.Path</td>
                        </tr>
                        <tr>
                            <th>Last message</th>
                            <td>@conversation.LastMessage?.Content</td>
                        </tr>

                    </tbody>
                </table>
            </div>
        </div>
     }
}
else
{
<p>No new conversations</p>
}

    @await Html.PartialAsync(
        "/Views/Shared/Pagination/_Pagination.cshtml",
        new PaginationViewModel
        {
            PageIndex = Model.ConversationList.PageIndex,
            TotalPages = Model.ConversationList.TotalPages,
            HasPreviousPage = Model.ConversationList.HasPreviousPage,
            HasNextPage = Model.ConversationList.HasNextPage,
            SurroundingIndexes = Model.ConversationList.GetSurroundingIndexes(2),
            Action = "NewConversationList"
        })

    @if (Model.Modal.ModalText != null)
    {@await Html.PartialAsync("/Views/Shared/Modals/_Modal.cshtml", Model.Modal);
}

    @section Scripts {
        <partial name="/Views/Shared/Scripts/_UtcToLocal.cshtml" />
    }


