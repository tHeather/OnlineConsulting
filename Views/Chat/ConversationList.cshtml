@using OnlineConsulting.Enums
@using OnlineConsulting.Models.ValueObjects.Chat
@using OnlineConsulting.Models.ViewModels.Pagination
@using OnlineConsulting.Tools
@model OnlineConsulting.Models.ViewModels.Chat.ConversationsListViewModel;

<div class="p-1 p-xl-5">
    <h1 class="text-warning pb-3 pt-3 pt-xl-0 text-center text-sm-left">Conversations</h1>

    <button class="btn bg-light my-3 " type="button" data-toggle="collapse" data-target="#collapseFilters" aria-expanded="false" aria-controls="collapseFilters">
        Filters
    </button>

    <div class="collapse mb-3" id="collapseFilters">
        <div class="card card-body bg-dark">
            <form  
                 asp-controller="Chat"
                 asp-action="ConversationList"
                 method="get"
                 id="FiltersForm"
            >

                <div class="d-flex  flex-column">
                    <label for="StartDate"
                           class="text-light mb-0  mr-2">
                        Start date
                    </label>
                    <input name="StartDate"
                           type="date" id="StartDate"
                           class="rounded p-1 bg-light border-0 mt-2"
                           value="@Model.Filters.StartDateUtc?.ToString("yyyy-MM-dd")"
                    />
                    <input hidden name="StartDateUtc"  />
                </div>

                <div class="d-flex  flex-column mt-3">
                    <label for="EndDate"
                           class="text-light mb-0  mr-2">
                        End date
                    </label>
                    <input name="EndDate"
                           type="date"
                           id="EndDate"
                           class="rounded p-1 bg-light border-0 mt-2" 
                           value="@Model.Filters.EndDateUtc?.ToString("yyyy-MM-dd")"
                    />
                    <input hidden name="EndDateUtc"  />
                </div>

                <div class="d-flex  flex-column mt-3">
                    <label for="Status"
                           class="text-light mb-0  mr-2">
                        Status
                    </label>
                    <select id="Status"
                            name="Status"
                            asp-items="Html.GetEnumSelectList<ConversationStatus>()"
                            asp-for="@Model.Filters.Status"
                            class="rounded p-1 bg-light border-0 mt-2"
                    >
                        <option value="">All</option>
                    </select>
                </div>

                <div class="d-flex  flex-column mt-3">
                    <label for="ConsultantEmail"
                           class="text-light mb-0  mr-2">
                        Consultant Email
                    </label>
                    <input type="text"
                           name="ConsultantEmail"
                           id="ConsultantEmail"
                           value="@Model.Filters.ConsultantEmail"
                           class="rounded p-1 bg-light border-0 mt-2" />
                </div>

                <div class="d-flex  flex-column mt-3">
                    <label for="Host"
                           class="text-light mb-0  mr-2">
                        Host
                    </label>
                    <input type="text"
                           name="Host"
                           id="Host"
                           class="rounded p-1 bg-light border-0 mt-2"
                           value="@Model.Filters.Host"
                           />
                </div>

                <button class="btn btn-warning mt-3">Search</button>

            </form>
        </div>
    </div>

    @if (Model.Conversations.Count > 0)
    {
      <div class="table-responsive rounded mb-2">
        <table class="table ">
            <thead class="bg-light ">
                <tr>
                    <th scope="col" class="text-dark">Create date</th>
                    <th scope="col" class="text-dark">Start date</th>
                    <th scope="col" class="text-dark">End date</th>
                    <th scope="col" class="text-dark">Host</th>
                    <th scope="col" class="text-dark">Path</th>
                    <th scope="col" class="text-dark">Status</th>
                    <th scope="col" class="text-dark">Consultant's e-mail</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var conversation in Model.Conversations)
                    {
                        <tr class="bg-dark">
                            <td class="text-light" data-utc-date="@conversation.CreateDate"></td>
                            <td class="text-light" data-utc-date="@conversation.StartDate"></td>
                            <td class="text-light" data-utc-date="@conversation.EndDate"></td>
                            <td class="text-light">@conversation.Host</td>
                            <td class="text-light">@conversation.Path</td>
                            <td class="text-light">@conversation.Status</td>
                            @{
                                var email = conversation.Consultant != null ? conversation.Consultant.Email : "";
                            }
                            <td class="text-light">@email</td>
                        </tr>
                    }
            </tbody>
        </table>
     </div>
    }
    else
    {
        <p class="text-light" >No conversations</p>
    }

    @await Html.PartialAsync(
        "/Views/Shared/Pagination/_Pagination.cshtml",
        new PaginationViewModel
        {
            PageIndex = Model.Conversations.PageIndex,
            TotalPages = Model.Conversations.TotalPages,
            HasPreviousPage = Model.Conversations.HasPreviousPage,
            HasNextPage = Model.Conversations.HasNextPage,
            SurroundingIndexes = Model.Conversations.GetSurroundingIndexes(2),
            Action = "ConversationList",
            RouteData = ObjectToDictionary.ToDictionary(Model.Filters)
        })
</div>

@section Scripts {
     <partial name="/Views/Shared/Scripts/_UtcToLocal.cshtml" />
     <script src="/js/tools/utcHelper.js" ></script>
     <script>
         InitHiddenUtcInputs("#FiltersForm");
     </script>
}


